using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using System.Data.SQLite;
using System.Text;
using System.Threading.Tasks;

namespace Adventures_Guild_Simulator
{
    class ModelNaming : Model
    {
        static SQLiteCommand cmd;
        static SQLiteDataReader sqlite_datareader;

        public ModelNaming()
        {
            string sqlexp = "CREATE TABLE IF NOT EXISTS naming (id integer primary key, " +
                "name string, " +
                "type string)";

            cmd = connection.CreateCommand();
            cmd.CommandText = sqlexp;
            cmd.ExecuteNonQuery();
            
        }

        //Adds all of the suffixes and prefixes, should only be done once
        public void CreateNames()
        {            
            int i = 1;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Stamina', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Bear', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Champion', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Bedrock', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Strength', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Intellect', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Agility', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Dexterity', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Constitution', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Wisdom', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Owl', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Storms', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Nimbleness', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Monkey', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Sorcerer', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Seer', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Bandit', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Marksmanship', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Brawling', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Sneaking', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Soldier', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Mercenary', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Galeburst', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Beast', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Landsliding', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Prophet', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Deathknight', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Warrior', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Undeads', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Harpy Queen', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Necromancer', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Blazing', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Windflurry', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Illusions', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Enchanting', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Zephyr', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'The Squire', 'suffix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Acclaimed', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Almighty', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Arching', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Astonishing', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Bold', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Cunning', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Daring', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Dashing', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Defensive', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Dense', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Dignified', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Divine', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Eccentric', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Elite', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Essential', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Fabled', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Forgotten', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Gleaming', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Glimmering', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Hulking', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Immaculate', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Incorporeal', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Infused', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Loyal', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Majestic', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Merciless', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Meticulous', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Mystic', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Noble', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Novel', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Obedient', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Organic', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Pristine', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Prized', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Ravaging', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Repellant', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Resistant', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Ruthless', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Sacred', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Holy', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Unholy', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Freezing', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Flaming', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Burning', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Blazing', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Cursed', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Hollow', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Lucky', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Creepy', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Bloody', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Filthy', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Crazy', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Precise', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Broken', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Demonic', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Angelic', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Beastial', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Haunted', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Blessed', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Arcane', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Chromatic', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Diamond', 'prefix')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Gert', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Carlo', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Fernando', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Alberta', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Signa', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Rahimus', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Nils', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Jessica', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'North', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Spanner', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Lisa', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Jayna', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Skinner', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Gertha', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Gruul', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Legolass', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Marudin', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Braccus', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Gymly', 'name')";
            cmd.ExecuteNonQuery();
            i++;
            cmd.CommandText = $"INSERT INTO naming (id, name, type) VALUES ({i}, 'Arrowgun', 'name')";
            cmd.ExecuteNonQuery();            
        }

        //Generates a prefix or suffix for an item
        public string SelectPrefix(int id)
        {
            cmd.CommandText = $"SELECT name FROM naming WHERE id = {id}";
            sqlite_datareader = cmd.ExecuteReader();

            string Value = "cake";
            while (sqlite_datareader.Read())
            {
                Value = sqlite_datareader.GetString(0);
            }
            sqlite_datareader.Close();
            return Value;
        }

        public bool NamesCreated()
        {
            bool b = true;
            cmd.CommandText = "SELECT COUNT(*) FROM naming";
            SQLiteDataReader reader = cmd.ExecuteReader();
            while (reader.Read())
            {
                if (reader.GetInt32(0) < 1)
                {
                    b = false;
                }
            }
            reader.Close();
            return b;
        }
    }
}
